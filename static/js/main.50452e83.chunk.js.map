{"version":3,"sources":["InputSum.js","App.js","index.js"],"names":["InputSum","props","cOptions","greens","onChangeNumber","selectedCurrency","onChangeCurrency","type","value","onChange","map","option","key","baseURL","App","greens1","greens2","useState","setCOptions","setGreens","whichone","setWhichone","exchangeRate","setExchangeRate","currencyIn","setCurrencyIn","currencyOut","setCurrencyOut","useEffect","fetch","then","res","json","data","pos1","Object","keys","rates","base","className","e","target","ReactDOM","render","document","getElementById"],"mappings":"mNAEe,SAASA,EAASC,GAAQ,IAEnCC,EAKED,EALFC,SACAC,EAIEF,EAJFE,OACAC,EAGEH,EAHFG,eACAC,EAEEJ,EAFFI,iBACAC,EACEL,EADFK,iBAEF,OACI,6BACI,2BAAOC,KAAO,SAAUC,MAASL,EAASM,SAAYL,IACtD,4BAAQI,MAASH,EAAkBI,SAAYH,GAC1CJ,EAASQ,KAAI,SAAAC,GAAM,OAChB,4BAAQC,IAAOD,EAAQH,MAASG,GAAhC,IAA0CA,EAA1C,UCZpB,IAAME,EAAU,yCA0EDC,MAzEf,WAAgB,IAOVC,EAASC,EAPA,EACkBC,mBAAS,IAD3B,mBACNf,EADM,KACGgB,EADH,OAEeD,mBAAS,GAFxB,mBAENd,EAFM,KAEGgB,EAFH,OAGmBF,oBAAS,GAH5B,mBAGNG,EAHM,KAGIC,EAHJ,OAI2BJ,qBAJ3B,mBAINK,EAJM,KAIQC,EAJR,OAKuBN,qBALvB,mBAKNO,EALM,KAKMC,EALN,OAMyBR,qBANzB,mBAMNS,EANM,KAMOC,EANP,KAkDb,OA1CIP,GACFL,EAAUZ,EACVa,EAAUb,EAASmB,IAEnBN,EAAUb,EACVY,EAAUZ,EAASmB,GAErBM,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACfF,MAAK,SAAAG,GACJ,IAAMC,EAAOC,OAAOC,KAAKH,EAAKI,OAAO,GACrCnB,EAAY,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UAC5Cd,EAAgBU,EAAKI,MAAMH,IAC3BT,EAAeQ,EAAKK,MACpBX,EAAeO,QAEjB,IAkBFN,qBAAU,WACW,MAAfF,GAAqC,MAAdF,GAC3BK,MAAM,GAAD,OAAIhB,EAAJ,iBAAoBW,EAApB,oBAA0CE,IAC5CI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIV,EAAgBU,EAAKI,MAAMX,SAE3C,CAACV,EAAQD,EAAQS,EAAWE,IAE9B,yBAAKa,UAAY,OACf,gEACA,kBAACvC,EAAD,CACEE,SAAYA,EACZC,OAAUY,EACVV,iBAAoBmB,EACpBpB,eA/BJ,SAAiCoC,GAC/BrB,EAAUqB,EAAEC,OAAOjC,OACnBa,GAAY,IA8BVf,iBAnBJ,SAAmCkC,GACjCf,EAAee,EAAEC,OAAOjC,OACxBa,GAAY,MAmBZ,kCACA,kBAACrB,EAAD,CACGE,SAAYA,EACZC,OAAUa,EACVX,iBAAoBqB,EACpBtB,eAnCL,SAAkCoC,GAChCrB,EAAUqB,EAAEC,OAAOjC,OACnBa,GAAY,IAkCTf,iBA/BL,SAAoCkC,GAClCb,EAAgBa,EAAEC,OAAOjC,OACzBa,GAAY,QCpClBqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.50452e83.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function InputSum(props) {\r\n    const {\r\n      cOptions , \r\n      greens,\r\n      onChangeNumber,\r\n      selectedCurrency,\r\n      onChangeCurrency\r\n    } = props\r\n    return (\r\n        <div>\r\n            <input type = \"number\"  value = {greens}  onChange = {onChangeNumber}/>\r\n            <select value = {selectedCurrency} onChange = {onChangeCurrency}>    \r\n                {cOptions.map(option => (\r\n                    <option key = {option} value = {option}> {option} </option>\r\n                )) }\r\n                \r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport InputSum from './InputSum';\nconst baseURL = \"https://api.exchangeratesapi.io/latest\"\nfunction App() {\n  const [cOptions,setCOptions] = useState([])\n  const [greens , setGreens]= useState(1)\n  const [whichone, setWhichone] = useState(true)\n  const [exchangeRate, setExchangeRate] = useState()\n  const [currencyIn, setCurrencyIn] = useState()\n  const [currencyOut, setCurrencyOut] = useState()\n  let greens1, greens2\n  if (whichone){\n    greens1 = greens\n    greens2 = greens * exchangeRate\n  } else{\n    greens2 = greens\n    greens1 = greens / exchangeRate\n  }  \n  useEffect(()=>{\n    fetch(baseURL)\n      .then(res=> res.json())\n      .then(data=> {   \n        const pos1 = Object.keys(data.rates)[0]     \n        setCOptions([data.base, ...Object.keys(data.rates)])\n        setExchangeRate(data.rates[pos1])\n        setCurrencyIn (data.base)\n        setCurrencyOut(pos1)\n      })\n    },[])\n    function handleFirstNumberChange(e){\n      setGreens(e.target.value)\n      setWhichone(true)\n    }\n    function handleSecondNumberChange(e){\n      setGreens(e.target.value)\n      setWhichone(false)\n      \n    }\n    function handleSecondCurrencyChange(e){\n      setCurrencyOut (e.target.value)\n      setWhichone(false)\n    }\n    function handleFirstCurrencyChange(e){\n      setCurrencyIn (e.target.value)\n      setWhichone(true)\n    }\n    useEffect(() =>{\n      if (currencyOut != null && currencyIn != null){\n      fetch(`${baseURL}?base=${currencyIn}&symbols=${currencyOut}`)\n        .then(res => res.json())\n        .then(data => setExchangeRate(data.rates[currencyOut]))\n      }\n    },[greens2,greens1,currencyIn,currencyOut])\n  return (\n    <div className = \"app\">  \n      <h1> Free Online Currency Converter </h1>\n      <InputSum\n        cOptions = {cOptions} \n        greens = {greens1}\n        selectedCurrency = {currencyIn}\n        onChangeNumber = {handleFirstNumberChange}\n        onChangeCurrency = {handleFirstCurrencyChange}\n        />\n      <div>=</div>\n      <InputSum \n         cOptions = {cOptions} \n         greens = {greens2}\n         selectedCurrency = {currencyOut}\n         onChangeNumber = {handleSecondNumberChange}\n         onChangeCurrency = {handleSecondCurrencyChange} \n\n         />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}